//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KEWIVendor.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Procurement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Procurement")]
    public partial class Procurement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateBidderAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddedCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BidderLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidVatNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVendorPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBidderAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrequalificationLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRFQHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTenderPrequalificationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTenderSubmissionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVendorPrequalificationHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRFQReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTenderRFQReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppliedCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBidderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryRequirementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPrequalificationPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyAppliedCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyBidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyPrequalificationApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyQuoteLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyQuotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenBidderTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnAppliedCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasActivatedAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasAppliedForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasAppliedForPrequalificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRFQLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTenderSubmissionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForChangedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForUnchangedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotAllMandatoryDocumentsUploadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrequalificationAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RFQAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitPrequalificationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback TenderAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBidderPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVendorPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidBidderNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Procurement() {
            this.Url = global::KEWIVendor.Properties.Settings.Default.KEWIVendor_NAVWS_Procurement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCitiesCompletedEventHandler GetCitiesCompleted;
        
        /// <remarks/>
        public event ActivateBidderAccountCompletedEventHandler ActivateBidderAccountCompleted;
        
        /// <remarks/>
        public event AddedCategoryCompletedEventHandler AddedCategoryCompleted;
        
        /// <remarks/>
        public event BidderLoginCompletedEventHandler BidderLoginCompleted;
        
        /// <remarks/>
        public event CheckPasswordChangedCompletedEventHandler CheckPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckValidVatNoCompletedEventHandler CheckValidVatNoCompleted;
        
        /// <remarks/>
        public event CheckVendorPasswordChangedCompletedEventHandler CheckVendorPasswordChangedCompleted;
        
        /// <remarks/>
        public event CreateBidderAccountCompletedEventHandler CreateBidderAccountCompleted;
        
        /// <remarks/>
        public event CreatePrequalificationLineCompletedEventHandler CreatePrequalificationLineCompleted;
        
        /// <remarks/>
        public event CreateRFQHeaderCompletedEventHandler CreateRFQHeaderCompleted;
        
        /// <remarks/>
        public event CreateTenderPrequalificationHeaderCompletedEventHandler CreateTenderPrequalificationHeaderCompleted;
        
        /// <remarks/>
        public event CreateTenderSubmissionHeaderCompletedEventHandler CreateTenderSubmissionHeaderCompleted;
        
        /// <remarks/>
        public event CreateVendorPrequalificationHeaderCompletedEventHandler CreateVendorPrequalificationHeaderCompleted;
        
        /// <remarks/>
        public event DocumentAttachmentCompletedEventHandler DocumentAttachmentCompleted;
        
        /// <remarks/>
        public event FileAttachedCompletedEventHandler FileAttachedCompleted;
        
        /// <remarks/>
        public event GenerateRFQReportCompletedEventHandler GenerateRFQReportCompleted;
        
        /// <remarks/>
        public event GenerateTenderRFQReportCompletedEventHandler GenerateTenderRFQReportCompleted;
        
        /// <remarks/>
        public event GetAppliedCategoriesCompletedEventHandler GetAppliedCategoriesCompleted;
        
        /// <remarks/>
        public event GetBidderDetailsCompletedEventHandler GetBidderDetailsCompleted;
        
        /// <remarks/>
        public event GetCategoryNameCompletedEventHandler GetCategoryNameCompleted;
        
        /// <remarks/>
        public event GetCategoryRequirementsCompletedEventHandler GetCategoryRequirementsCompleted;
        
        /// <remarks/>
        public event GetCurrentPrequalificationPeriodCompletedEventHandler GetCurrentPrequalificationPeriodCompleted;
        
        /// <remarks/>
        public event GetLastEntryCompletedEventHandler GetLastEntryCompleted;
        
        /// <remarks/>
        public event GetMyAppliedCategoriesCompletedEventHandler GetMyAppliedCategoriesCompleted;
        
        /// <remarks/>
        public event GetMyBidLinesCompletedEventHandler GetMyBidLinesCompleted;
        
        /// <remarks/>
        public event GetMyBidsCompletedEventHandler GetMyBidsCompleted;
        
        /// <remarks/>
        public event GetMyPrequalificationApplicationsCompletedEventHandler GetMyPrequalificationApplicationsCompleted;
        
        /// <remarks/>
        public event GetMyQuoteLinesCompletedEventHandler GetMyQuoteLinesCompleted;
        
        /// <remarks/>
        public event GetMyQuotesCompletedEventHandler GetMyQuotesCompleted;
        
        /// <remarks/>
        public event GetOpenBidderTendersCompletedEventHandler GetOpenBidderTendersCompleted;
        
        /// <remarks/>
        public event GetOpenTenderLinesCompletedEventHandler GetOpenTenderLinesCompleted;
        
        /// <remarks/>
        public event GetOpenTendersCompletedEventHandler GetOpenTendersCompleted;
        
        /// <remarks/>
        public event GetUnAppliedCategoriesCompletedEventHandler GetUnAppliedCategoriesCompleted;
        
        /// <remarks/>
        public event GetVendorDetailsCompletedEventHandler GetVendorDetailsCompleted;
        
        /// <remarks/>
        public event GetVendorNameCompletedEventHandler GetVendorNameCompleted;
        
        /// <remarks/>
        public event HasActivatedAccountCompletedEventHandler HasActivatedAccountCompleted;
        
        /// <remarks/>
        public event HasAppliedForCategoryCompletedEventHandler HasAppliedForCategoryCompleted;
        
        /// <remarks/>
        public event HasAppliedForPrequalificationCompletedEventHandler HasAppliedForPrequalificationCompleted;
        
        /// <remarks/>
        public event InsertRFQLinesCompletedEventHandler InsertRFQLinesCompleted;
        
        /// <remarks/>
        public event InsertTenderSubmissionLineCompletedEventHandler InsertTenderSubmissionLineCompleted;
        
        /// <remarks/>
        public event LoginForChangedPasswordCompletedEventHandler LoginForChangedPasswordCompleted;
        
        /// <remarks/>
        public event LoginForUnchangedPasswordCompletedEventHandler LoginForUnchangedPasswordCompleted;
        
        /// <remarks/>
        public event NotAllMandatoryDocumentsUploadedCompletedEventHandler NotAllMandatoryDocumentsUploadedCompleted;
        
        /// <remarks/>
        public event PrequalificationAppliedCompletedEventHandler PrequalificationAppliedCompleted;
        
        /// <remarks/>
        public event RFQAppliedCompletedEventHandler RFQAppliedCompleted;
        
        /// <remarks/>
        public event SubmitBidCompletedEventHandler SubmitBidCompleted;
        
        /// <remarks/>
        public event SubmitPrequalificationApplicationCompletedEventHandler SubmitPrequalificationApplicationCompleted;
        
        /// <remarks/>
        public event SubmitRFQCompletedEventHandler SubmitRFQCompleted;
        
        /// <remarks/>
        public event TenderAppliedCompletedEventHandler TenderAppliedCompleted;
        
        /// <remarks/>
        public event UpdateBidderPasswordCompletedEventHandler UpdateBidderPasswordCompleted;
        
        /// <remarks/>
        public event UpdateVendorPasswordCompletedEventHandler UpdateVendorPasswordCompleted;
        
        /// <remarks/>
        public event ValidBidderNoCompletedEventHandler ValidBidderNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetCities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetCities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCities() {
            object[] results = this.Invoke("GetCities", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCitiesAsync() {
            this.GetCitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetCitiesAsync(object userState) {
            if ((this.GetCitiesOperationCompleted == null)) {
                this.GetCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitiesOperationCompleted);
            }
            this.InvokeAsync("GetCities", new object[0], this.GetCitiesOperationCompleted, userState);
        }
        
        private void OnGetCitiesOperationCompleted(object arg) {
            if ((this.GetCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitiesCompleted(this, new GetCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:ActivateBidderAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="ActivateBidderAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ActivateBidderAccount(string kraPin) {
            this.Invoke("ActivateBidderAccount", new object[] {
                        kraPin});
        }
        
        /// <remarks/>
        public void ActivateBidderAccountAsync(string kraPin) {
            this.ActivateBidderAccountAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void ActivateBidderAccountAsync(string kraPin, object userState) {
            if ((this.ActivateBidderAccountOperationCompleted == null)) {
                this.ActivateBidderAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateBidderAccountOperationCompleted);
            }
            this.InvokeAsync("ActivateBidderAccount", new object[] {
                        kraPin}, this.ActivateBidderAccountOperationCompleted, userState);
        }
        
        private void OnActivateBidderAccountOperationCompleted(object arg) {
            if ((this.ActivateBidderAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateBidderAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:AddedCategory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="AddedCategory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddedCategory(string vatNo) {
            object[] results = this.Invoke("AddedCategory", new object[] {
                        vatNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string vatNo) {
            this.AddedCategoryAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void AddedCategoryAsync(string vatNo, object userState) {
            if ((this.AddedCategoryOperationCompleted == null)) {
                this.AddedCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddedCategoryOperationCompleted);
            }
            this.InvokeAsync("AddedCategory", new object[] {
                        vatNo}, this.AddedCategoryOperationCompleted, userState);
        }
        
        private void OnAddedCategoryOperationCompleted(object arg) {
            if ((this.AddedCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddedCategoryCompleted(this, new AddedCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:BidderLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="BidderLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string BidderLogin(string kraPin, string password) {
            object[] results = this.Invoke("BidderLogin", new object[] {
                        kraPin,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BidderLoginAsync(string kraPin, string password) {
            this.BidderLoginAsync(kraPin, password, null);
        }
        
        /// <remarks/>
        public void BidderLoginAsync(string kraPin, string password, object userState) {
            if ((this.BidderLoginOperationCompleted == null)) {
                this.BidderLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBidderLoginOperationCompleted);
            }
            this.InvokeAsync("BidderLogin", new object[] {
                        kraPin,
                        password}, this.BidderLoginOperationCompleted, userState);
        }
        
        private void OnBidderLoginOperationCompleted(object arg) {
            if ((this.BidderLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BidderLoginCompleted(this, new BidderLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CheckPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CheckPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckPasswordChanged(string kraPin) {
            object[] results = this.Invoke("CheckPasswordChanged", new object[] {
                        kraPin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPasswordChangedAsync(string kraPin) {
            this.CheckPasswordChangedAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void CheckPasswordChangedAsync(string kraPin, object userState) {
            if ((this.CheckPasswordChangedOperationCompleted == null)) {
                this.CheckPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckPasswordChanged", new object[] {
                        kraPin}, this.CheckPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPasswordChangedCompleted(this, new CheckPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CheckValidVatNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CheckValidVatNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckValidVatNo(string vatNo) {
            object[] results = this.Invoke("CheckValidVatNo", new object[] {
                        vatNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidVatNoAsync(string vatNo) {
            this.CheckValidVatNoAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void CheckValidVatNoAsync(string vatNo, object userState) {
            if ((this.CheckValidVatNoOperationCompleted == null)) {
                this.CheckValidVatNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidVatNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidVatNo", new object[] {
                        vatNo}, this.CheckValidVatNoOperationCompleted, userState);
        }
        
        private void OnCheckValidVatNoOperationCompleted(object arg) {
            if ((this.CheckValidVatNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidVatNoCompleted(this, new CheckValidVatNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CheckVendorPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CheckVendorPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckVendorPasswordChanged(string vatNo) {
            object[] results = this.Invoke("CheckVendorPasswordChanged", new object[] {
                        vatNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckVendorPasswordChangedAsync(string vatNo) {
            this.CheckVendorPasswordChangedAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void CheckVendorPasswordChangedAsync(string vatNo, object userState) {
            if ((this.CheckVendorPasswordChangedOperationCompleted == null)) {
                this.CheckVendorPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVendorPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckVendorPasswordChanged", new object[] {
                        vatNo}, this.CheckVendorPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckVendorPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckVendorPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVendorPasswordChangedCompleted(this, new CheckVendorPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreateBidderAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreateBidderAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBidderAccount(string kraPin, string companyName, string address, string companyPhone, string companyEmail, string contactPerson, string contactEmail, string city, string sessionKey) {
            this.Invoke("CreateBidderAccount", new object[] {
                        kraPin,
                        companyName,
                        address,
                        companyPhone,
                        companyEmail,
                        contactPerson,
                        contactEmail,
                        city,
                        sessionKey});
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(string kraPin, string companyName, string address, string companyPhone, string companyEmail, string contactPerson, string contactEmail, string city, string sessionKey) {
            this.CreateBidderAccountAsync(kraPin, companyName, address, companyPhone, companyEmail, contactPerson, contactEmail, city, sessionKey, null);
        }
        
        /// <remarks/>
        public void CreateBidderAccountAsync(string kraPin, string companyName, string address, string companyPhone, string companyEmail, string contactPerson, string contactEmail, string city, string sessionKey, object userState) {
            if ((this.CreateBidderAccountOperationCompleted == null)) {
                this.CreateBidderAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBidderAccountOperationCompleted);
            }
            this.InvokeAsync("CreateBidderAccount", new object[] {
                        kraPin,
                        companyName,
                        address,
                        companyPhone,
                        companyEmail,
                        contactPerson,
                        contactEmail,
                        city,
                        sessionKey}, this.CreateBidderAccountOperationCompleted, userState);
        }
        
        private void OnCreateBidderAccountOperationCompleted(object arg) {
            if ((this.CreateBidderAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBidderAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreatePrequalificationLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreatePrequalificationLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreatePrequalificationLine(string vatNo, string email, string category) {
            this.Invoke("CreatePrequalificationLine", new object[] {
                        vatNo,
                        email,
                        category});
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string vatNo, string email, string category) {
            this.CreatePrequalificationLineAsync(vatNo, email, category, null);
        }
        
        /// <remarks/>
        public void CreatePrequalificationLineAsync(string vatNo, string email, string category, object userState) {
            if ((this.CreatePrequalificationLineOperationCompleted == null)) {
                this.CreatePrequalificationLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrequalificationLineOperationCompleted);
            }
            this.InvokeAsync("CreatePrequalificationLine", new object[] {
                        vatNo,
                        email,
                        category}, this.CreatePrequalificationLineOperationCompleted, userState);
        }
        
        private void OnCreatePrequalificationLineOperationCompleted(object arg) {
            if ((this.CreatePrequalificationLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrequalificationLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreateRFQHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreateRFQHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRFQHeader(string vendorNo, string tenderNo) {
            object[] results = this.Invoke("CreateRFQHeader", new object[] {
                        vendorNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRFQHeaderAsync(string vendorNo, string tenderNo) {
            this.CreateRFQHeaderAsync(vendorNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CreateRFQHeaderAsync(string vendorNo, string tenderNo, object userState) {
            if ((this.CreateRFQHeaderOperationCompleted == null)) {
                this.CreateRFQHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRFQHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateRFQHeader", new object[] {
                        vendorNo,
                        tenderNo}, this.CreateRFQHeaderOperationCompleted, userState);
        }
        
        private void OnCreateRFQHeaderOperationCompleted(object arg) {
            if ((this.CreateRFQHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRFQHeaderCompleted(this, new CreateRFQHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreateTenderPrequalificationH" +
            "eader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreateTenderPrequalificationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateTenderPrequalificationHeader(string kraNo) {
            this.Invoke("CreateTenderPrequalificationHeader", new object[] {
                        kraNo});
        }
        
        /// <remarks/>
        public void CreateTenderPrequalificationHeaderAsync(string kraNo) {
            this.CreateTenderPrequalificationHeaderAsync(kraNo, null);
        }
        
        /// <remarks/>
        public void CreateTenderPrequalificationHeaderAsync(string kraNo, object userState) {
            if ((this.CreateTenderPrequalificationHeaderOperationCompleted == null)) {
                this.CreateTenderPrequalificationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTenderPrequalificationHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateTenderPrequalificationHeader", new object[] {
                        kraNo}, this.CreateTenderPrequalificationHeaderOperationCompleted, userState);
        }
        
        private void OnCreateTenderPrequalificationHeaderOperationCompleted(object arg) {
            if ((this.CreateTenderPrequalificationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTenderPrequalificationHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreateTenderSubmissionHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreateTenderSubmissionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTenderSubmissionHeader(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("CreateTenderSubmissionHeader", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeaderAsync(string bidderNo, string tenderNo) {
            this.CreateTenderSubmissionHeaderAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void CreateTenderSubmissionHeaderAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.CreateTenderSubmissionHeaderOperationCompleted == null)) {
                this.CreateTenderSubmissionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTenderSubmissionHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateTenderSubmissionHeader", new object[] {
                        bidderNo,
                        tenderNo}, this.CreateTenderSubmissionHeaderOperationCompleted, userState);
        }
        
        private void OnCreateTenderSubmissionHeaderOperationCompleted(object arg) {
            if ((this.CreateTenderSubmissionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTenderSubmissionHeaderCompleted(this, new CreateTenderSubmissionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:CreateVendorPrequalificationH" +
            "eader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="CreateVendorPrequalificationHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateVendorPrequalificationHeader(string vendorNo) {
            this.Invoke("CreateVendorPrequalificationHeader", new object[] {
                        vendorNo});
        }
        
        /// <remarks/>
        public void CreateVendorPrequalificationHeaderAsync(string vendorNo) {
            this.CreateVendorPrequalificationHeaderAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void CreateVendorPrequalificationHeaderAsync(string vendorNo, object userState) {
            if ((this.CreateVendorPrequalificationHeaderOperationCompleted == null)) {
                this.CreateVendorPrequalificationHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVendorPrequalificationHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateVendorPrequalificationHeader", new object[] {
                        vendorNo}, this.CreateVendorPrequalificationHeaderOperationCompleted, userState);
        }
        
        private void OnCreateVendorPrequalificationHeaderOperationCompleted(object arg) {
            if ((this.CreateVendorPrequalificationHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVendorPrequalificationHeaderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:DocumentAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="DocumentAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DocumentAttachment(string retNo, string fileName, string attachment, int tableId) {
            object[] results = this.Invoke("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId) {
            this.DocumentAttachmentAsync(retNo, fileName, attachment, tableId, null);
        }
        
        /// <remarks/>
        public void DocumentAttachmentAsync(string retNo, string fileName, string attachment, int tableId, object userState) {
            if ((this.DocumentAttachmentOperationCompleted == null)) {
                this.DocumentAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentAttachmentOperationCompleted);
            }
            this.InvokeAsync("DocumentAttachment", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId}, this.DocumentAttachmentOperationCompleted, userState);
        }
        
        private void OnDocumentAttachmentOperationCompleted(object arg) {
            if ((this.DocumentAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentAttachmentCompleted(this, new DocumentAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:FileAttached", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="FileAttached_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FileAttached(string vatNo, string description) {
            object[] results = this.Invoke("FileAttached", new object[] {
                        vatNo,
                        description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string vatNo, string description) {
            this.FileAttachedAsync(vatNo, description, null);
        }
        
        /// <remarks/>
        public void FileAttachedAsync(string vatNo, string description, object userState) {
            if ((this.FileAttachedOperationCompleted == null)) {
                this.FileAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileAttachedOperationCompleted);
            }
            this.InvokeAsync("FileAttached", new object[] {
                        vatNo,
                        description}, this.FileAttachedOperationCompleted, userState);
        }
        
        private void OnFileAttachedOperationCompleted(object arg) {
            if ((this.FileAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileAttachedCompleted(this, new FileAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GenerateRFQReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GenerateRFQReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateRFQReport(string tenderNo, string fileNameFromApp) {
            this.Invoke("GenerateRFQReport", new object[] {
                        tenderNo,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GenerateRFQReportAsync(string tenderNo, string fileNameFromApp) {
            this.GenerateRFQReportAsync(tenderNo, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateRFQReportAsync(string tenderNo, string fileNameFromApp, object userState) {
            if ((this.GenerateRFQReportOperationCompleted == null)) {
                this.GenerateRFQReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRFQReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRFQReport", new object[] {
                        tenderNo,
                        fileNameFromApp}, this.GenerateRFQReportOperationCompleted, userState);
        }
        
        private void OnGenerateRFQReportOperationCompleted(object arg) {
            if ((this.GenerateRFQReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRFQReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GenerateTenderRFQReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GenerateTenderRFQReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateTenderRFQReport(string tenderNo, string fileNameFromApp) {
            this.Invoke("GenerateTenderRFQReport", new object[] {
                        tenderNo,
                        fileNameFromApp});
        }
        
        /// <remarks/>
        public void GenerateTenderRFQReportAsync(string tenderNo, string fileNameFromApp) {
            this.GenerateTenderRFQReportAsync(tenderNo, fileNameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateTenderRFQReportAsync(string tenderNo, string fileNameFromApp, object userState) {
            if ((this.GenerateTenderRFQReportOperationCompleted == null)) {
                this.GenerateTenderRFQReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTenderRFQReportOperationCompleted);
            }
            this.InvokeAsync("GenerateTenderRFQReport", new object[] {
                        tenderNo,
                        fileNameFromApp}, this.GenerateTenderRFQReportOperationCompleted, userState);
        }
        
        private void OnGenerateTenderRFQReportOperationCompleted(object arg) {
            if ((this.GenerateTenderRFQReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTenderRFQReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetAppliedCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetAppliedCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAppliedCategories(string vatNo) {
            object[] results = this.Invoke("GetAppliedCategories", new object[] {
                        vatNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppliedCategoriesAsync(string vatNo) {
            this.GetAppliedCategoriesAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void GetAppliedCategoriesAsync(string vatNo, object userState) {
            if ((this.GetAppliedCategoriesOperationCompleted == null)) {
                this.GetAppliedCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppliedCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAppliedCategories", new object[] {
                        vatNo}, this.GetAppliedCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAppliedCategoriesOperationCompleted(object arg) {
            if ((this.GetAppliedCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppliedCategoriesCompleted(this, new GetAppliedCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetBidderDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetBidderDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBidderDetails(string kraPin) {
            object[] results = this.Invoke("GetBidderDetails", new object[] {
                        kraPin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBidderDetailsAsync(string kraPin) {
            this.GetBidderDetailsAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void GetBidderDetailsAsync(string kraPin, object userState) {
            if ((this.GetBidderDetailsOperationCompleted == null)) {
                this.GetBidderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBidderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBidderDetails", new object[] {
                        kraPin}, this.GetBidderDetailsOperationCompleted, userState);
        }
        
        private void OnGetBidderDetailsOperationCompleted(object arg) {
            if ((this.GetBidderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBidderDetailsCompleted(this, new GetBidderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetCategoryName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetCategoryName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryName(string category) {
            object[] results = this.Invoke("GetCategoryName", new object[] {
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string category) {
            this.GetCategoryNameAsync(category, null);
        }
        
        /// <remarks/>
        public void GetCategoryNameAsync(string category, object userState) {
            if ((this.GetCategoryNameOperationCompleted == null)) {
                this.GetCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryNameOperationCompleted);
            }
            this.InvokeAsync("GetCategoryName", new object[] {
                        category}, this.GetCategoryNameOperationCompleted, userState);
        }
        
        private void OnGetCategoryNameOperationCompleted(object arg) {
            if ((this.GetCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryNameCompleted(this, new GetCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetCategoryRequirements", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetCategoryRequirements_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCategoryRequirements(string vatNo, string category) {
            object[] results = this.Invoke("GetCategoryRequirements", new object[] {
                        vatNo,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string vatNo, string category) {
            this.GetCategoryRequirementsAsync(vatNo, category, null);
        }
        
        /// <remarks/>
        public void GetCategoryRequirementsAsync(string vatNo, string category, object userState) {
            if ((this.GetCategoryRequirementsOperationCompleted == null)) {
                this.GetCategoryRequirementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryRequirementsOperationCompleted);
            }
            this.InvokeAsync("GetCategoryRequirements", new object[] {
                        vatNo,
                        category}, this.GetCategoryRequirementsOperationCompleted, userState);
        }
        
        private void OnGetCategoryRequirementsOperationCompleted(object arg) {
            if ((this.GetCategoryRequirementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryRequirementsCompleted(this, new GetCategoryRequirementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetCurrentPrequalificationPer" +
            "iod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetCurrentPrequalificationPeriod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentPrequalificationPeriod() {
            object[] results = this.Invoke("GetCurrentPrequalificationPeriod", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync() {
            this.GetCurrentPrequalificationPeriodAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentPrequalificationPeriodAsync(object userState) {
            if ((this.GetCurrentPrequalificationPeriodOperationCompleted == null)) {
                this.GetCurrentPrequalificationPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPrequalificationPeriodOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPrequalificationPeriod", new object[0], this.GetCurrentPrequalificationPeriodOperationCompleted, userState);
        }
        
        private void OnGetCurrentPrequalificationPeriodOperationCompleted(object arg) {
            if ((this.GetCurrentPrequalificationPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPrequalificationPeriodCompleted(this, new GetCurrentPrequalificationPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetLastEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetLastEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetLastEntry() {
            object[] results = this.Invoke("GetLastEntry", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastEntryAsync() {
            this.GetLastEntryAsync(null);
        }
        
        /// <remarks/>
        public void GetLastEntryAsync(object userState) {
            if ((this.GetLastEntryOperationCompleted == null)) {
                this.GetLastEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastEntryOperationCompleted);
            }
            this.InvokeAsync("GetLastEntry", new object[0], this.GetLastEntryOperationCompleted, userState);
        }
        
        private void OnGetLastEntryOperationCompleted(object arg) {
            if ((this.GetLastEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastEntryCompleted(this, new GetLastEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyAppliedCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyAppliedCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyAppliedCategories(string vatNo, string period) {
            object[] results = this.Invoke("GetMyAppliedCategories", new object[] {
                        vatNo,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyAppliedCategoriesAsync(string vatNo, string period) {
            this.GetMyAppliedCategoriesAsync(vatNo, period, null);
        }
        
        /// <remarks/>
        public void GetMyAppliedCategoriesAsync(string vatNo, string period, object userState) {
            if ((this.GetMyAppliedCategoriesOperationCompleted == null)) {
                this.GetMyAppliedCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyAppliedCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetMyAppliedCategories", new object[] {
                        vatNo,
                        period}, this.GetMyAppliedCategoriesOperationCompleted, userState);
        }
        
        private void OnGetMyAppliedCategoriesOperationCompleted(object arg) {
            if ((this.GetMyAppliedCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyAppliedCategoriesCompleted(this, new GetMyAppliedCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyBidLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyBidLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBidLines(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("GetMyBidLines", new object[] {
                        bidderNo,
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidLinesAsync(string bidderNo, string tenderNo) {
            this.GetMyBidLinesAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBidLinesAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.GetMyBidLinesOperationCompleted == null)) {
                this.GetMyBidLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidLinesOperationCompleted);
            }
            this.InvokeAsync("GetMyBidLines", new object[] {
                        bidderNo,
                        tenderNo}, this.GetMyBidLinesOperationCompleted, userState);
        }
        
        private void OnGetMyBidLinesOperationCompleted(object arg) {
            if ((this.GetMyBidLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidLinesCompleted(this, new GetMyBidLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyBids", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyBids_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyBids(string bidderNo) {
            object[] results = this.Invoke("GetMyBids", new object[] {
                        bidderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string bidderNo) {
            this.GetMyBidsAsync(bidderNo, null);
        }
        
        /// <remarks/>
        public void GetMyBidsAsync(string bidderNo, object userState) {
            if ((this.GetMyBidsOperationCompleted == null)) {
                this.GetMyBidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyBidsOperationCompleted);
            }
            this.InvokeAsync("GetMyBids", new object[] {
                        bidderNo}, this.GetMyBidsOperationCompleted, userState);
        }
        
        private void OnGetMyBidsOperationCompleted(object arg) {
            if ((this.GetMyBidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyBidsCompleted(this, new GetMyBidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyPrequalificationApplicat" +
            "ions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyPrequalificationApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyPrequalificationApplications(string vatNo) {
            object[] results = this.Invoke("GetMyPrequalificationApplications", new object[] {
                        vatNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyPrequalificationApplicationsAsync(string vatNo) {
            this.GetMyPrequalificationApplicationsAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void GetMyPrequalificationApplicationsAsync(string vatNo, object userState) {
            if ((this.GetMyPrequalificationApplicationsOperationCompleted == null)) {
                this.GetMyPrequalificationApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyPrequalificationApplicationsOperationCompleted);
            }
            this.InvokeAsync("GetMyPrequalificationApplications", new object[] {
                        vatNo}, this.GetMyPrequalificationApplicationsOperationCompleted, userState);
        }
        
        private void OnGetMyPrequalificationApplicationsOperationCompleted(object arg) {
            if ((this.GetMyPrequalificationApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyPrequalificationApplicationsCompleted(this, new GetMyPrequalificationApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyQuoteLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyQuoteLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyQuoteLines(string vendorNo, string bidNo) {
            object[] results = this.Invoke("GetMyQuoteLines", new object[] {
                        vendorNo,
                        bidNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyQuoteLinesAsync(string vendorNo, string bidNo) {
            this.GetMyQuoteLinesAsync(vendorNo, bidNo, null);
        }
        
        /// <remarks/>
        public void GetMyQuoteLinesAsync(string vendorNo, string bidNo, object userState) {
            if ((this.GetMyQuoteLinesOperationCompleted == null)) {
                this.GetMyQuoteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyQuoteLinesOperationCompleted);
            }
            this.InvokeAsync("GetMyQuoteLines", new object[] {
                        vendorNo,
                        bidNo}, this.GetMyQuoteLinesOperationCompleted, userState);
        }
        
        private void OnGetMyQuoteLinesOperationCompleted(object arg) {
            if ((this.GetMyQuoteLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyQuoteLinesCompleted(this, new GetMyQuoteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetMyQuotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetMyQuotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMyQuotes(string vendorNo) {
            object[] results = this.Invoke("GetMyQuotes", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyQuotesAsync(string vendorNo) {
            this.GetMyQuotesAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetMyQuotesAsync(string vendorNo, object userState) {
            if ((this.GetMyQuotesOperationCompleted == null)) {
                this.GetMyQuotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyQuotesOperationCompleted);
            }
            this.InvokeAsync("GetMyQuotes", new object[] {
                        vendorNo}, this.GetMyQuotesOperationCompleted, userState);
        }
        
        private void OnGetMyQuotesOperationCompleted(object arg) {
            if ((this.GetMyQuotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyQuotesCompleted(this, new GetMyQuotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetOpenBidderTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetOpenBidderTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenBidderTenders() {
            object[] results = this.Invoke("GetOpenBidderTenders", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenBidderTendersAsync() {
            this.GetOpenBidderTendersAsync(null);
        }
        
        /// <remarks/>
        public void GetOpenBidderTendersAsync(object userState) {
            if ((this.GetOpenBidderTendersOperationCompleted == null)) {
                this.GetOpenBidderTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenBidderTendersOperationCompleted);
            }
            this.InvokeAsync("GetOpenBidderTenders", new object[0], this.GetOpenBidderTendersOperationCompleted, userState);
        }
        
        private void OnGetOpenBidderTendersOperationCompleted(object arg) {
            if ((this.GetOpenBidderTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenBidderTendersCompleted(this, new GetOpenBidderTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetOpenTenderLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetOpenTenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenderLines(string tenderNo) {
            object[] results = this.Invoke("GetOpenTenderLines", new object[] {
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string tenderNo) {
            this.GetOpenTenderLinesAsync(tenderNo, null);
        }
        
        /// <remarks/>
        public void GetOpenTenderLinesAsync(string tenderNo, object userState) {
            if ((this.GetOpenTenderLinesOperationCompleted == null)) {
                this.GetOpenTenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTenderLinesOperationCompleted);
            }
            this.InvokeAsync("GetOpenTenderLines", new object[] {
                        tenderNo}, this.GetOpenTenderLinesOperationCompleted, userState);
        }
        
        private void OnGetOpenTenderLinesOperationCompleted(object arg) {
            if ((this.GetOpenTenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTenderLinesCompleted(this, new GetOpenTenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetOpenTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetOpenTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenTenders(string vendorNo) {
            object[] results = this.Invoke("GetOpenTenders", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenTendersAsync(string vendorNo) {
            this.GetOpenTendersAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetOpenTendersAsync(string vendorNo, object userState) {
            if ((this.GetOpenTendersOperationCompleted == null)) {
                this.GetOpenTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenTendersOperationCompleted);
            }
            this.InvokeAsync("GetOpenTenders", new object[] {
                        vendorNo}, this.GetOpenTendersOperationCompleted, userState);
        }
        
        private void OnGetOpenTendersOperationCompleted(object arg) {
            if ((this.GetOpenTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenTendersCompleted(this, new GetOpenTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetUnAppliedCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetUnAppliedCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUnAppliedCategories(string vatNo) {
            object[] results = this.Invoke("GetUnAppliedCategories", new object[] {
                        vatNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnAppliedCategoriesAsync(string vatNo) {
            this.GetUnAppliedCategoriesAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void GetUnAppliedCategoriesAsync(string vatNo, object userState) {
            if ((this.GetUnAppliedCategoriesOperationCompleted == null)) {
                this.GetUnAppliedCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnAppliedCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetUnAppliedCategories", new object[] {
                        vatNo}, this.GetUnAppliedCategoriesOperationCompleted, userState);
        }
        
        private void OnGetUnAppliedCategoriesOperationCompleted(object arg) {
            if ((this.GetUnAppliedCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnAppliedCategoriesCompleted(this, new GetUnAppliedCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetVendorDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetVendorDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetVendorDetails(string vendorNo) {
            object[] results = this.Invoke("GetVendorDetails", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorDetailsAsync(string vendorNo) {
            this.GetVendorDetailsAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetVendorDetailsAsync(string vendorNo, object userState) {
            if ((this.GetVendorDetailsOperationCompleted == null)) {
                this.GetVendorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVendorDetails", new object[] {
                        vendorNo}, this.GetVendorDetailsOperationCompleted, userState);
        }
        
        private void OnGetVendorDetailsOperationCompleted(object arg) {
            if ((this.GetVendorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorDetailsCompleted(this, new GetVendorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:GetVendorName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="GetVendorName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetVendorName(string vendorNo) {
            object[] results = this.Invoke("GetVendorName", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorNameAsync(string vendorNo) {
            this.GetVendorNameAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void GetVendorNameAsync(string vendorNo, object userState) {
            if ((this.GetVendorNameOperationCompleted == null)) {
                this.GetVendorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorNameOperationCompleted);
            }
            this.InvokeAsync("GetVendorName", new object[] {
                        vendorNo}, this.GetVendorNameOperationCompleted, userState);
        }
        
        private void OnGetVendorNameOperationCompleted(object arg) {
            if ((this.GetVendorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorNameCompleted(this, new GetVendorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:HasActivatedAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="HasActivatedAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool HasActivatedAccount(string kraPin) {
            object[] results = this.Invoke("HasActivatedAccount", new object[] {
                        kraPin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasActivatedAccountAsync(string kraPin) {
            this.HasActivatedAccountAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void HasActivatedAccountAsync(string kraPin, object userState) {
            if ((this.HasActivatedAccountOperationCompleted == null)) {
                this.HasActivatedAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasActivatedAccountOperationCompleted);
            }
            this.InvokeAsync("HasActivatedAccount", new object[] {
                        kraPin}, this.HasActivatedAccountOperationCompleted, userState);
        }
        
        private void OnHasActivatedAccountOperationCompleted(object arg) {
            if ((this.HasActivatedAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasActivatedAccountCompleted(this, new HasActivatedAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:HasAppliedForCategory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="HasAppliedForCategory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool HasAppliedForCategory(string vatNo, string category) {
            object[] results = this.Invoke("HasAppliedForCategory", new object[] {
                        vatNo,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasAppliedForCategoryAsync(string vatNo, string category) {
            this.HasAppliedForCategoryAsync(vatNo, category, null);
        }
        
        /// <remarks/>
        public void HasAppliedForCategoryAsync(string vatNo, string category, object userState) {
            if ((this.HasAppliedForCategoryOperationCompleted == null)) {
                this.HasAppliedForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasAppliedForCategoryOperationCompleted);
            }
            this.InvokeAsync("HasAppliedForCategory", new object[] {
                        vatNo,
                        category}, this.HasAppliedForCategoryOperationCompleted, userState);
        }
        
        private void OnHasAppliedForCategoryOperationCompleted(object arg) {
            if ((this.HasAppliedForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasAppliedForCategoryCompleted(this, new HasAppliedForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:HasAppliedForPrequalification" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="HasAppliedForPrequalification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool HasAppliedForPrequalification(string vatNo, string email) {
            object[] results = this.Invoke("HasAppliedForPrequalification", new object[] {
                        vatNo,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasAppliedForPrequalificationAsync(string vatNo, string email) {
            this.HasAppliedForPrequalificationAsync(vatNo, email, null);
        }
        
        /// <remarks/>
        public void HasAppliedForPrequalificationAsync(string vatNo, string email, object userState) {
            if ((this.HasAppliedForPrequalificationOperationCompleted == null)) {
                this.HasAppliedForPrequalificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasAppliedForPrequalificationOperationCompleted);
            }
            this.InvokeAsync("HasAppliedForPrequalification", new object[] {
                        vatNo,
                        email}, this.HasAppliedForPrequalificationOperationCompleted, userState);
        }
        
        private void OnHasAppliedForPrequalificationOperationCompleted(object arg) {
            if ((this.HasAppliedForPrequalificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasAppliedForPrequalificationCompleted(this, new HasAppliedForPrequalificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:InsertRFQLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="InsertRFQLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertRFQLines(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int entryNo) {
            object[] results = this.Invoke("InsertRFQLines", new object[] {
                        vendorNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt,
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRFQLinesAsync(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int entryNo) {
            this.InsertRFQLinesAsync(vendorNo, tenderNo, bidNo, itemNo, quotedAmt, entryNo, null);
        }
        
        /// <remarks/>
        public void InsertRFQLinesAsync(string vendorNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmt, int entryNo, object userState) {
            if ((this.InsertRFQLinesOperationCompleted == null)) {
                this.InsertRFQLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRFQLinesOperationCompleted);
            }
            this.InvokeAsync("InsertRFQLines", new object[] {
                        vendorNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmt,
                        entryNo}, this.InsertRFQLinesOperationCompleted, userState);
        }
        
        private void OnInsertRFQLinesOperationCompleted(object arg) {
            if ((this.InsertRFQLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRFQLinesCompleted(this, new InsertRFQLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:InsertTenderSubmissionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="InsertTenderSubmissionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTenderSubmissionLine(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt) {
            object[] results = this.Invoke("InsertTenderSubmissionLine", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmnt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLineAsync(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt) {
            this.InsertTenderSubmissionLineAsync(bidderNo, tenderNo, bidNo, itemNo, quotedAmnt, null);
        }
        
        /// <remarks/>
        public void InsertTenderSubmissionLineAsync(string bidderNo, string tenderNo, string bidNo, string itemNo, decimal quotedAmnt, object userState) {
            if ((this.InsertTenderSubmissionLineOperationCompleted == null)) {
                this.InsertTenderSubmissionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTenderSubmissionLineOperationCompleted);
            }
            this.InvokeAsync("InsertTenderSubmissionLine", new object[] {
                        bidderNo,
                        tenderNo,
                        bidNo,
                        itemNo,
                        quotedAmnt}, this.InsertTenderSubmissionLineOperationCompleted, userState);
        }
        
        private void OnInsertTenderSubmissionLineOperationCompleted(object arg) {
            if ((this.InsertTenderSubmissionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTenderSubmissionLineCompleted(this, new InsertTenderSubmissionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:LoginForChangedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="LoginForChangedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForChangedPassword(string vatNo, string password) {
            object[] results = this.Invoke("LoginForChangedPassword", new object[] {
                        vatNo,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForChangedPasswordAsync(string vatNo, string password) {
            this.LoginForChangedPasswordAsync(vatNo, password, null);
        }
        
        /// <remarks/>
        public void LoginForChangedPasswordAsync(string vatNo, string password, object userState) {
            if ((this.LoginForChangedPasswordOperationCompleted == null)) {
                this.LoginForChangedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForChangedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForChangedPassword", new object[] {
                        vatNo,
                        password}, this.LoginForChangedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForChangedPasswordOperationCompleted(object arg) {
            if ((this.LoginForChangedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForChangedPasswordCompleted(this, new LoginForChangedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:LoginForUnchangedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="LoginForUnchangedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForUnchangedPassword(string vatNo) {
            object[] results = this.Invoke("LoginForUnchangedPassword", new object[] {
                        vatNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string vatNo) {
            this.LoginForUnchangedPasswordAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string vatNo, object userState) {
            if ((this.LoginForUnchangedPasswordOperationCompleted == null)) {
                this.LoginForUnchangedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForUnchangedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForUnchangedPassword", new object[] {
                        vatNo}, this.LoginForUnchangedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForUnchangedPasswordOperationCompleted(object arg) {
            if ((this.LoginForUnchangedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForUnchangedPasswordCompleted(this, new LoginForUnchangedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:NotAllMandatoryDocumentsUploa" +
            "ded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="NotAllMandatoryDocumentsUploaded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool NotAllMandatoryDocumentsUploaded(string vatNo, string category) {
            object[] results = this.Invoke("NotAllMandatoryDocumentsUploaded", new object[] {
                        vatNo,
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsUploadedAsync(string vatNo, string category) {
            this.NotAllMandatoryDocumentsUploadedAsync(vatNo, category, null);
        }
        
        /// <remarks/>
        public void NotAllMandatoryDocumentsUploadedAsync(string vatNo, string category, object userState) {
            if ((this.NotAllMandatoryDocumentsUploadedOperationCompleted == null)) {
                this.NotAllMandatoryDocumentsUploadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotAllMandatoryDocumentsUploadedOperationCompleted);
            }
            this.InvokeAsync("NotAllMandatoryDocumentsUploaded", new object[] {
                        vatNo,
                        category}, this.NotAllMandatoryDocumentsUploadedOperationCompleted, userState);
        }
        
        private void OnNotAllMandatoryDocumentsUploadedOperationCompleted(object arg) {
            if ((this.NotAllMandatoryDocumentsUploadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotAllMandatoryDocumentsUploadedCompleted(this, new NotAllMandatoryDocumentsUploadedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:PrequalificationApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="PrequalificationApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PrequalificationApplied(string vatNo) {
            object[] results = this.Invoke("PrequalificationApplied", new object[] {
                        vatNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string vatNo) {
            this.PrequalificationAppliedAsync(vatNo, null);
        }
        
        /// <remarks/>
        public void PrequalificationAppliedAsync(string vatNo, object userState) {
            if ((this.PrequalificationAppliedOperationCompleted == null)) {
                this.PrequalificationAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrequalificationAppliedOperationCompleted);
            }
            this.InvokeAsync("PrequalificationApplied", new object[] {
                        vatNo}, this.PrequalificationAppliedOperationCompleted, userState);
        }
        
        private void OnPrequalificationAppliedOperationCompleted(object arg) {
            if ((this.PrequalificationAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrequalificationAppliedCompleted(this, new PrequalificationAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:RFQApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="RFQApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool RFQApplied(string vendorNo, string tenderNo) {
            object[] results = this.Invoke("RFQApplied", new object[] {
                        vendorNo,
                        tenderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RFQAppliedAsync(string vendorNo, string tenderNo) {
            this.RFQAppliedAsync(vendorNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void RFQAppliedAsync(string vendorNo, string tenderNo, object userState) {
            if ((this.RFQAppliedOperationCompleted == null)) {
                this.RFQAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRFQAppliedOperationCompleted);
            }
            this.InvokeAsync("RFQApplied", new object[] {
                        vendorNo,
                        tenderNo}, this.RFQAppliedOperationCompleted, userState);
        }
        
        private void OnRFQAppliedOperationCompleted(object arg) {
            if ((this.RFQAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RFQAppliedCompleted(this, new RFQAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:SubmitBid", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="SubmitBid_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitBid(string bidderNo, string bidNo) {
            object[] results = this.Invoke("SubmitBid", new object[] {
                        bidderNo,
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBidAsync(string bidderNo, string bidNo) {
            this.SubmitBidAsync(bidderNo, bidNo, null);
        }
        
        /// <remarks/>
        public void SubmitBidAsync(string bidderNo, string bidNo, object userState) {
            if ((this.SubmitBidOperationCompleted == null)) {
                this.SubmitBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBidOperationCompleted);
            }
            this.InvokeAsync("SubmitBid", new object[] {
                        bidderNo,
                        bidNo}, this.SubmitBidOperationCompleted, userState);
        }
        
        private void OnSubmitBidOperationCompleted(object arg) {
            if ((this.SubmitBidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBidCompleted(this, new SubmitBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:SubmitPrequalificationApplica" +
            "tion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="SubmitPrequalificationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitPrequalificationApplication(string vatNo, string email) {
            this.Invoke("SubmitPrequalificationApplication", new object[] {
                        vatNo,
                        email});
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string vatNo, string email) {
            this.SubmitPrequalificationApplicationAsync(vatNo, email, null);
        }
        
        /// <remarks/>
        public void SubmitPrequalificationApplicationAsync(string vatNo, string email, object userState) {
            if ((this.SubmitPrequalificationApplicationOperationCompleted == null)) {
                this.SubmitPrequalificationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitPrequalificationApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitPrequalificationApplication", new object[] {
                        vatNo,
                        email}, this.SubmitPrequalificationApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitPrequalificationApplicationOperationCompleted(object arg) {
            if ((this.SubmitPrequalificationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitPrequalificationApplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:SubmitRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="SubmitRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SubmitRFQ(string vendorNo, string bidNo) {
            object[] results = this.Invoke("SubmitRFQ", new object[] {
                        vendorNo,
                        bidNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitRFQAsync(string vendorNo, string bidNo) {
            this.SubmitRFQAsync(vendorNo, bidNo, null);
        }
        
        /// <remarks/>
        public void SubmitRFQAsync(string vendorNo, string bidNo, object userState) {
            if ((this.SubmitRFQOperationCompleted == null)) {
                this.SubmitRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitRFQOperationCompleted);
            }
            this.InvokeAsync("SubmitRFQ", new object[] {
                        vendorNo,
                        bidNo}, this.SubmitRFQOperationCompleted, userState);
        }
        
        private void OnSubmitRFQOperationCompleted(object arg) {
            if ((this.SubmitRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitRFQCompleted(this, new SubmitRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:TenderApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="TenderApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool TenderApplied(string bidderNo, string tenderNo) {
            object[] results = this.Invoke("TenderApplied", new object[] {
                        bidderNo,
                        tenderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TenderAppliedAsync(string bidderNo, string tenderNo) {
            this.TenderAppliedAsync(bidderNo, tenderNo, null);
        }
        
        /// <remarks/>
        public void TenderAppliedAsync(string bidderNo, string tenderNo, object userState) {
            if ((this.TenderAppliedOperationCompleted == null)) {
                this.TenderAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTenderAppliedOperationCompleted);
            }
            this.InvokeAsync("TenderApplied", new object[] {
                        bidderNo,
                        tenderNo}, this.TenderAppliedOperationCompleted, userState);
        }
        
        private void OnTenderAppliedOperationCompleted(object arg) {
            if ((this.TenderAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TenderAppliedCompleted(this, new TenderAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:UpdateBidderPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="UpdateBidderPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBidderPassword(string kraPin, string genpass) {
            this.Invoke("UpdateBidderPassword", new object[] {
                        kraPin,
                        genpass});
        }
        
        /// <remarks/>
        public void UpdateBidderPasswordAsync(string kraPin, string genpass) {
            this.UpdateBidderPasswordAsync(kraPin, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateBidderPasswordAsync(string kraPin, string genpass, object userState) {
            if ((this.UpdateBidderPasswordOperationCompleted == null)) {
                this.UpdateBidderPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBidderPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateBidderPassword", new object[] {
                        kraPin,
                        genpass}, this.UpdateBidderPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateBidderPasswordOperationCompleted(object arg) {
            if ((this.UpdateBidderPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBidderPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:UpdateVendorPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="UpdateVendorPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateVendorPassword(string vendorNo, string genpass) {
            this.Invoke("UpdateVendorPassword", new object[] {
                        vendorNo,
                        genpass});
        }
        
        /// <remarks/>
        public void UpdateVendorPasswordAsync(string vendorNo, string genpass) {
            this.UpdateVendorPasswordAsync(vendorNo, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateVendorPasswordAsync(string vendorNo, string genpass, object userState) {
            if ((this.UpdateVendorPasswordOperationCompleted == null)) {
                this.UpdateVendorPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVendorPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateVendorPassword", new object[] {
                        vendorNo,
                        genpass}, this.UpdateVendorPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateVendorPasswordOperationCompleted(object arg) {
            if ((this.UpdateVendorPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVendorPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Procurement:ValidBidderNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", ResponseElementName="ValidBidderNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Procurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidBidderNo(string kraPin) {
            object[] results = this.Invoke("ValidBidderNo", new object[] {
                        kraPin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidBidderNoAsync(string kraPin) {
            this.ValidBidderNoAsync(kraPin, null);
        }
        
        /// <remarks/>
        public void ValidBidderNoAsync(string kraPin, object userState) {
            if ((this.ValidBidderNoOperationCompleted == null)) {
                this.ValidBidderNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidBidderNoOperationCompleted);
            }
            this.InvokeAsync("ValidBidderNo", new object[] {
                        kraPin}, this.ValidBidderNoOperationCompleted, userState);
        }
        
        private void OnValidBidderNoOperationCompleted(object arg) {
            if ((this.ValidBidderNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidBidderNoCompleted(this, new ValidBidderNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCitiesCompletedEventHandler(object sender, GetCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ActivateBidderAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddedCategoryCompletedEventHandler(object sender, AddedCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddedCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddedCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void BidderLoginCompletedEventHandler(object sender, BidderLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BidderLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BidderLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckPasswordChangedCompletedEventHandler(object sender, CheckPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckValidVatNoCompletedEventHandler(object sender, CheckValidVatNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidVatNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidVatNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckVendorPasswordChangedCompletedEventHandler(object sender, CheckVendorPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckVendorPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckVendorPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateBidderAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreatePrequalificationLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateRFQHeaderCompletedEventHandler(object sender, CreateRFQHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRFQHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRFQHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTenderPrequalificationHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateTenderSubmissionHeaderCompletedEventHandler(object sender, CreateTenderSubmissionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTenderSubmissionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTenderSubmissionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateVendorPrequalificationHeaderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DocumentAttachmentCompletedEventHandler(object sender, DocumentAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FileAttachedCompletedEventHandler(object sender, FileAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateRFQReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GenerateTenderRFQReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAppliedCategoriesCompletedEventHandler(object sender, GetAppliedCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppliedCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppliedCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetBidderDetailsCompletedEventHandler(object sender, GetBidderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBidderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBidderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryNameCompletedEventHandler(object sender, GetCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCategoryRequirementsCompletedEventHandler(object sender, GetCategoryRequirementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCurrentPrequalificationPeriodCompletedEventHandler(object sender, GetCurrentPrequalificationPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPrequalificationPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPrequalificationPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLastEntryCompletedEventHandler(object sender, GetLastEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyAppliedCategoriesCompletedEventHandler(object sender, GetMyAppliedCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyAppliedCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyAppliedCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBidLinesCompletedEventHandler(object sender, GetMyBidLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyBidsCompletedEventHandler(object sender, GetMyBidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyBidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyBidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyPrequalificationApplicationsCompletedEventHandler(object sender, GetMyPrequalificationApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyPrequalificationApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyPrequalificationApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyQuoteLinesCompletedEventHandler(object sender, GetMyQuoteLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyQuoteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyQuoteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMyQuotesCompletedEventHandler(object sender, GetMyQuotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyQuotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyQuotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenBidderTendersCompletedEventHandler(object sender, GetOpenBidderTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenBidderTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenBidderTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTenderLinesCompletedEventHandler(object sender, GetOpenTenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOpenTendersCompletedEventHandler(object sender, GetOpenTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUnAppliedCategoriesCompletedEventHandler(object sender, GetUnAppliedCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnAppliedCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnAppliedCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVendorDetailsCompletedEventHandler(object sender, GetVendorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetVendorNameCompletedEventHandler(object sender, GetVendorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasActivatedAccountCompletedEventHandler(object sender, HasActivatedAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasActivatedAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasActivatedAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasAppliedForCategoryCompletedEventHandler(object sender, HasAppliedForCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasAppliedForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasAppliedForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasAppliedForPrequalificationCompletedEventHandler(object sender, HasAppliedForPrequalificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasAppliedForPrequalificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasAppliedForPrequalificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertRFQLinesCompletedEventHandler(object sender, InsertRFQLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRFQLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRFQLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertTenderSubmissionLineCompletedEventHandler(object sender, InsertTenderSubmissionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTenderSubmissionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTenderSubmissionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginForChangedPasswordCompletedEventHandler(object sender, LoginForChangedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForChangedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForChangedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginForUnchangedPasswordCompletedEventHandler(object sender, LoginForUnchangedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForUnchangedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForUnchangedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void NotAllMandatoryDocumentsUploadedCompletedEventHandler(object sender, NotAllMandatoryDocumentsUploadedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotAllMandatoryDocumentsUploadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotAllMandatoryDocumentsUploadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PrequalificationAppliedCompletedEventHandler(object sender, PrequalificationAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrequalificationAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrequalificationAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RFQAppliedCompletedEventHandler(object sender, RFQAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RFQAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RFQAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitBidCompletedEventHandler(object sender, SubmitBidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitPrequalificationApplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitRFQCompletedEventHandler(object sender, SubmitRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void TenderAppliedCompletedEventHandler(object sender, TenderAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TenderAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TenderAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateBidderPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateVendorPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ValidBidderNoCompletedEventHandler(object sender, ValidBidderNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidBidderNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidBidderNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591