//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KEWIStaff.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Staffportal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal")]
    public partial class Staffportal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckStaffPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidStaffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentAcademicYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinalExamMaxScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerProgrammesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerSemesterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerStagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLecturerUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgrammeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubmittedExamMarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLecturerOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForChangedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForUnchangedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitSummativeResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStaffPasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Staffportal() {
            this.Url = global::KEWIStaff.Properties.Settings.Default.KEWIStaff_NAVWS1_Staffportal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckStaffPasswordChangedCompletedEventHandler CheckStaffPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckValidStaffNoCompletedEventHandler CheckValidStaffNoCompleted;
        
        /// <remarks/>
        public event GetCampusCompletedEventHandler GetCampusCompleted;
        
        /// <remarks/>
        public event GetCurrentAcademicYearCompletedEventHandler GetCurrentAcademicYearCompleted;
        
        /// <remarks/>
        public event GetFinalExamMaxScoreCompletedEventHandler GetFinalExamMaxScoreCompleted;
        
        /// <remarks/>
        public event GetLecturerProgrammesCompletedEventHandler GetLecturerProgrammesCompleted;
        
        /// <remarks/>
        public event GetLecturerSemesterCompletedEventHandler GetLecturerSemesterCompleted;
        
        /// <remarks/>
        public event GetLecturerStagesCompletedEventHandler GetLecturerStagesCompleted;
        
        /// <remarks/>
        public event GetLecturerStudentsCompletedEventHandler GetLecturerStudentsCompleted;
        
        /// <remarks/>
        public event GetLecturerUnitsCompletedEventHandler GetLecturerUnitsCompleted;
        
        /// <remarks/>
        public event GetProgrammeNameCompletedEventHandler GetProgrammeNameCompleted;
        
        /// <remarks/>
        public event GetStaffDetailsCompletedEventHandler GetStaffDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffGenderCompletedEventHandler GetStaffGenderCompleted;
        
        /// <remarks/>
        public event GetStudentNameCompletedEventHandler GetStudentNameCompleted;
        
        /// <remarks/>
        public event GetSubmittedExamMarksCompletedEventHandler GetSubmittedExamMarksCompleted;
        
        /// <remarks/>
        public event GetUnitDescriptionCompletedEventHandler GetUnitDescriptionCompleted;
        
        /// <remarks/>
        public event IsLecturerCompletedEventHandler IsLecturerCompleted;
        
        /// <remarks/>
        public event LoginForChangedPasswordCompletedEventHandler LoginForChangedPasswordCompleted;
        
        /// <remarks/>
        public event LoginForUnchangedPasswordCompletedEventHandler LoginForUnchangedPasswordCompleted;
        
        /// <remarks/>
        public event SubmitSummativeResultsCompletedEventHandler SubmitSummativeResultsCompleted;
        
        /// <remarks/>
        public event UpdateStaffPasswordCompletedEventHandler UpdateStaffPasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CheckStaffPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CheckStaffPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckStaffPasswordChanged(string username) {
            object[] results = this.Invoke("CheckStaffPasswordChanged", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username) {
            this.CheckStaffPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username, object userState) {
            if ((this.CheckStaffPasswordChangedOperationCompleted == null)) {
                this.CheckStaffPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckStaffPasswordChanged", new object[] {
                        username}, this.CheckStaffPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckStaffPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckStaffPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffPasswordChangedCompleted(this, new CheckStaffPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:CheckValidStaffNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="CheckValidStaffNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckValidStaffNo(string username) {
            this.Invoke("CheckValidStaffNo", new object[] {
                        username});
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username) {
            this.CheckValidStaffNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username, object userState) {
            if ((this.CheckValidStaffNoOperationCompleted == null)) {
                this.CheckValidStaffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidStaffNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidStaffNo", new object[] {
                        username}, this.CheckValidStaffNoOperationCompleted, userState);
        }
        
        private void OnCheckValidStaffNoOperationCompleted(object arg) {
            if ((this.CheckValidStaffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidStaffNoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetCampus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetCampus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCampus() {
            object[] results = this.Invoke("GetCampus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampusAsync() {
            this.GetCampusAsync(null);
        }
        
        /// <remarks/>
        public void GetCampusAsync(object userState) {
            if ((this.GetCampusOperationCompleted == null)) {
                this.GetCampusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampusOperationCompleted);
            }
            this.InvokeAsync("GetCampus", new object[0], this.GetCampusOperationCompleted, userState);
        }
        
        private void OnGetCampusOperationCompleted(object arg) {
            if ((this.GetCampusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampusCompleted(this, new GetCampusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetCurrentAcademicYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetCurrentAcademicYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentAcademicYear() {
            object[] results = this.Invoke("GetCurrentAcademicYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentAcademicYearAsync() {
            this.GetCurrentAcademicYearAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentAcademicYearAsync(object userState) {
            if ((this.GetCurrentAcademicYearOperationCompleted == null)) {
                this.GetCurrentAcademicYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentAcademicYearOperationCompleted);
            }
            this.InvokeAsync("GetCurrentAcademicYear", new object[0], this.GetCurrentAcademicYearOperationCompleted, userState);
        }
        
        private void OnGetCurrentAcademicYearOperationCompleted(object arg) {
            if ((this.GetCurrentAcademicYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentAcademicYearCompleted(this, new GetCurrentAcademicYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetFinalExamMaxScore", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetFinalExamMaxScore_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetFinalExamMaxScore(string unitCode) {
            object[] results = this.Invoke("GetFinalExamMaxScore", new object[] {
                        unitCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinalExamMaxScoreAsync(string unitCode) {
            this.GetFinalExamMaxScoreAsync(unitCode, null);
        }
        
        /// <remarks/>
        public void GetFinalExamMaxScoreAsync(string unitCode, object userState) {
            if ((this.GetFinalExamMaxScoreOperationCompleted == null)) {
                this.GetFinalExamMaxScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinalExamMaxScoreOperationCompleted);
            }
            this.InvokeAsync("GetFinalExamMaxScore", new object[] {
                        unitCode}, this.GetFinalExamMaxScoreOperationCompleted, userState);
        }
        
        private void OnGetFinalExamMaxScoreOperationCompleted(object arg) {
            if ((this.GetFinalExamMaxScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinalExamMaxScoreCompleted(this, new GetFinalExamMaxScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLecturerProgrammes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLecturerProgrammes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLecturerProgrammes(string username) {
            object[] results = this.Invoke("GetLecturerProgrammes", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerProgrammesAsync(string username) {
            this.GetLecturerProgrammesAsync(username, null);
        }
        
        /// <remarks/>
        public void GetLecturerProgrammesAsync(string username, object userState) {
            if ((this.GetLecturerProgrammesOperationCompleted == null)) {
                this.GetLecturerProgrammesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerProgrammesOperationCompleted);
            }
            this.InvokeAsync("GetLecturerProgrammes", new object[] {
                        username}, this.GetLecturerProgrammesOperationCompleted, userState);
        }
        
        private void OnGetLecturerProgrammesOperationCompleted(object arg) {
            if ((this.GetLecturerProgrammesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerProgrammesCompleted(this, new GetLecturerProgrammesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLecturerSemester", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLecturerSemester_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLecturerSemester(string username, string programme, string stage) {
            object[] results = this.Invoke("GetLecturerSemester", new object[] {
                        username,
                        programme,
                        stage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerSemesterAsync(string username, string programme, string stage) {
            this.GetLecturerSemesterAsync(username, programme, stage, null);
        }
        
        /// <remarks/>
        public void GetLecturerSemesterAsync(string username, string programme, string stage, object userState) {
            if ((this.GetLecturerSemesterOperationCompleted == null)) {
                this.GetLecturerSemesterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerSemesterOperationCompleted);
            }
            this.InvokeAsync("GetLecturerSemester", new object[] {
                        username,
                        programme,
                        stage}, this.GetLecturerSemesterOperationCompleted, userState);
        }
        
        private void OnGetLecturerSemesterOperationCompleted(object arg) {
            if ((this.GetLecturerSemesterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerSemesterCompleted(this, new GetLecturerSemesterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLecturerStages", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLecturerStages_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLecturerStages(string username, string programme) {
            object[] results = this.Invoke("GetLecturerStages", new object[] {
                        username,
                        programme});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerStagesAsync(string username, string programme) {
            this.GetLecturerStagesAsync(username, programme, null);
        }
        
        /// <remarks/>
        public void GetLecturerStagesAsync(string username, string programme, object userState) {
            if ((this.GetLecturerStagesOperationCompleted == null)) {
                this.GetLecturerStagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerStagesOperationCompleted);
            }
            this.InvokeAsync("GetLecturerStages", new object[] {
                        username,
                        programme}, this.GetLecturerStagesOperationCompleted, userState);
        }
        
        private void OnGetLecturerStagesOperationCompleted(object arg) {
            if ((this.GetLecturerStagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerStagesCompleted(this, new GetLecturerStagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLecturerStudents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLecturerStudents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLecturerStudents(string semester, string programme, string unit, string stage) {
            object[] results = this.Invoke("GetLecturerStudents", new object[] {
                        semester,
                        programme,
                        unit,
                        stage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerStudentsAsync(string semester, string programme, string unit, string stage) {
            this.GetLecturerStudentsAsync(semester, programme, unit, stage, null);
        }
        
        /// <remarks/>
        public void GetLecturerStudentsAsync(string semester, string programme, string unit, string stage, object userState) {
            if ((this.GetLecturerStudentsOperationCompleted == null)) {
                this.GetLecturerStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerStudentsOperationCompleted);
            }
            this.InvokeAsync("GetLecturerStudents", new object[] {
                        semester,
                        programme,
                        unit,
                        stage}, this.GetLecturerStudentsOperationCompleted, userState);
        }
        
        private void OnGetLecturerStudentsOperationCompleted(object arg) {
            if ((this.GetLecturerStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerStudentsCompleted(this, new GetLecturerStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetLecturerUnits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetLecturerUnits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLecturerUnits(string username, string programme, string stage, string term) {
            object[] results = this.Invoke("GetLecturerUnits", new object[] {
                        username,
                        programme,
                        stage,
                        term});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLecturerUnitsAsync(string username, string programme, string stage, string term) {
            this.GetLecturerUnitsAsync(username, programme, stage, term, null);
        }
        
        /// <remarks/>
        public void GetLecturerUnitsAsync(string username, string programme, string stage, string term, object userState) {
            if ((this.GetLecturerUnitsOperationCompleted == null)) {
                this.GetLecturerUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLecturerUnitsOperationCompleted);
            }
            this.InvokeAsync("GetLecturerUnits", new object[] {
                        username,
                        programme,
                        stage,
                        term}, this.GetLecturerUnitsOperationCompleted, userState);
        }
        
        private void OnGetLecturerUnitsOperationCompleted(object arg) {
            if ((this.GetLecturerUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLecturerUnitsCompleted(this, new GetLecturerUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetProgrammeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetProgrammeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProgrammeName(string progId) {
            object[] results = this.Invoke("GetProgrammeName", new object[] {
                        progId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgrammeNameAsync(string progId) {
            this.GetProgrammeNameAsync(progId, null);
        }
        
        /// <remarks/>
        public void GetProgrammeNameAsync(string progId, object userState) {
            if ((this.GetProgrammeNameOperationCompleted == null)) {
                this.GetProgrammeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgrammeNameOperationCompleted);
            }
            this.InvokeAsync("GetProgrammeName", new object[] {
                        progId}, this.GetProgrammeNameOperationCompleted, userState);
        }
        
        private void OnGetProgrammeNameOperationCompleted(object arg) {
            if ((this.GetProgrammeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgrammeNameCompleted(this, new GetProgrammeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffDetails(string username) {
            object[] results = this.Invoke("GetStaffDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username) {
            this.GetStaffDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffDetailsAsync(string username, object userState) {
            if ((this.GetStaffDetailsOperationCompleted == null)) {
                this.GetStaffDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStaffDetails", new object[] {
                        username}, this.GetStaffDetailsOperationCompleted, userState);
        }
        
        private void OnGetStaffDetailsOperationCompleted(object arg) {
            if ((this.GetStaffDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffDetailsCompleted(this, new GetStaffDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStaffGender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStaffGender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffGender(string username) {
            object[] results = this.Invoke("GetStaffGender", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username) {
            this.GetStaffGenderAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffGenderAsync(string username, object userState) {
            if ((this.GetStaffGenderOperationCompleted == null)) {
                this.GetStaffGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffGenderOperationCompleted);
            }
            this.InvokeAsync("GetStaffGender", new object[] {
                        username}, this.GetStaffGenderOperationCompleted, userState);
        }
        
        private void OnGetStaffGenderOperationCompleted(object arg) {
            if ((this.GetStaffGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffGenderCompleted(this, new GetStaffGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetStudentName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetStudentName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStudentName(string studentNo) {
            object[] results = this.Invoke("GetStudentName", new object[] {
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentNameAsync(string studentNo) {
            this.GetStudentNameAsync(studentNo, null);
        }
        
        /// <remarks/>
        public void GetStudentNameAsync(string studentNo, object userState) {
            if ((this.GetStudentNameOperationCompleted == null)) {
                this.GetStudentNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentNameOperationCompleted);
            }
            this.InvokeAsync("GetStudentName", new object[] {
                        studentNo}, this.GetStudentNameOperationCompleted, userState);
        }
        
        private void OnGetStudentNameOperationCompleted(object arg) {
            if ((this.GetStudentNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentNameCompleted(this, new GetStudentNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetSubmittedExamMarks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetSubmittedExamMarks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetSubmittedExamMarks(string studentNo, string unit, string semester, string lecturer, string stage, string program) {
            object[] results = this.Invoke("GetSubmittedExamMarks", new object[] {
                        studentNo,
                        unit,
                        semester,
                        lecturer,
                        stage,
                        program});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubmittedExamMarksAsync(string studentNo, string unit, string semester, string lecturer, string stage, string program) {
            this.GetSubmittedExamMarksAsync(studentNo, unit, semester, lecturer, stage, program, null);
        }
        
        /// <remarks/>
        public void GetSubmittedExamMarksAsync(string studentNo, string unit, string semester, string lecturer, string stage, string program, object userState) {
            if ((this.GetSubmittedExamMarksOperationCompleted == null)) {
                this.GetSubmittedExamMarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubmittedExamMarksOperationCompleted);
            }
            this.InvokeAsync("GetSubmittedExamMarks", new object[] {
                        studentNo,
                        unit,
                        semester,
                        lecturer,
                        stage,
                        program}, this.GetSubmittedExamMarksOperationCompleted, userState);
        }
        
        private void OnGetSubmittedExamMarksOperationCompleted(object arg) {
            if ((this.GetSubmittedExamMarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubmittedExamMarksCompleted(this, new GetSubmittedExamMarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:GetUnitDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="GetUnitDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUnitDescription(string programme, string stage, string term, string unit) {
            object[] results = this.Invoke("GetUnitDescription", new object[] {
                        programme,
                        stage,
                        term,
                        unit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitDescriptionAsync(string programme, string stage, string term, string unit) {
            this.GetUnitDescriptionAsync(programme, stage, term, unit, null);
        }
        
        /// <remarks/>
        public void GetUnitDescriptionAsync(string programme, string stage, string term, string unit, object userState) {
            if ((this.GetUnitDescriptionOperationCompleted == null)) {
                this.GetUnitDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetUnitDescription", new object[] {
                        programme,
                        stage,
                        term,
                        unit}, this.GetUnitDescriptionOperationCompleted, userState);
        }
        
        private void OnGetUnitDescriptionOperationCompleted(object arg) {
            if ((this.GetUnitDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitDescriptionCompleted(this, new GetUnitDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:IsLecturer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="IsLecturer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool IsLecturer(string username) {
            object[] results = this.Invoke("IsLecturer", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLecturerAsync(string username) {
            this.IsLecturerAsync(username, null);
        }
        
        /// <remarks/>
        public void IsLecturerAsync(string username, object userState) {
            if ((this.IsLecturerOperationCompleted == null)) {
                this.IsLecturerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLecturerOperationCompleted);
            }
            this.InvokeAsync("IsLecturer", new object[] {
                        username}, this.IsLecturerOperationCompleted, userState);
        }
        
        private void OnIsLecturerOperationCompleted(object arg) {
            if ((this.IsLecturerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLecturerCompleted(this, new IsLecturerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:LoginForChangedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="LoginForChangedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForChangedPassword(string username, string password) {
            object[] results = this.Invoke("LoginForChangedPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForChangedPasswordAsync(string username, string password) {
            this.LoginForChangedPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginForChangedPasswordAsync(string username, string password, object userState) {
            if ((this.LoginForChangedPasswordOperationCompleted == null)) {
                this.LoginForChangedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForChangedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForChangedPassword", new object[] {
                        username,
                        password}, this.LoginForChangedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForChangedPasswordOperationCompleted(object arg) {
            if ((this.LoginForChangedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForChangedPasswordCompleted(this, new LoginForChangedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:LoginForUnchangedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="LoginForUnchangedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForUnchangedPassword(string username) {
            object[] results = this.Invoke("LoginForUnchangedPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string username) {
            this.LoginForUnchangedPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string username, object userState) {
            if ((this.LoginForUnchangedPasswordOperationCompleted == null)) {
                this.LoginForUnchangedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForUnchangedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForUnchangedPassword", new object[] {
                        username}, this.LoginForUnchangedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForUnchangedPasswordOperationCompleted(object arg) {
            if ((this.LoginForUnchangedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForUnchangedPasswordCompleted(this, new LoginForUnchangedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:SubmitSummativeResults", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="SubmitSummativeResults_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitSummativeResults(string studentNo, string unit, decimal score, string program, string lecturer, string stage, string semester) {
            this.Invoke("SubmitSummativeResults", new object[] {
                        studentNo,
                        unit,
                        score,
                        program,
                        lecturer,
                        stage,
                        semester});
        }
        
        /// <remarks/>
        public void SubmitSummativeResultsAsync(string studentNo, string unit, decimal score, string program, string lecturer, string stage, string semester) {
            this.SubmitSummativeResultsAsync(studentNo, unit, score, program, lecturer, stage, semester, null);
        }
        
        /// <remarks/>
        public void SubmitSummativeResultsAsync(string studentNo, string unit, decimal score, string program, string lecturer, string stage, string semester, object userState) {
            if ((this.SubmitSummativeResultsOperationCompleted == null)) {
                this.SubmitSummativeResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitSummativeResultsOperationCompleted);
            }
            this.InvokeAsync("SubmitSummativeResults", new object[] {
                        studentNo,
                        unit,
                        score,
                        program,
                        lecturer,
                        stage,
                        semester}, this.SubmitSummativeResultsOperationCompleted, userState);
        }
        
        private void OnSubmitSummativeResultsOperationCompleted(object arg) {
            if ((this.SubmitSummativeResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitSummativeResultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Staffportal:UpdateStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", ResponseElementName="UpdateStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Staffportal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStaffPassword(string username, string genpass) {
            this.Invoke("UpdateStaffPassword", new object[] {
                        username,
                        genpass});
        }
        
        /// <remarks/>
        public void UpdateStaffPasswordAsync(string username, string genpass) {
            this.UpdateStaffPasswordAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateStaffPasswordAsync(string username, string genpass, object userState) {
            if ((this.UpdateStaffPasswordOperationCompleted == null)) {
                this.UpdateStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateStaffPassword", new object[] {
                        username,
                        genpass}, this.UpdateStaffPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateStaffPasswordOperationCompleted(object arg) {
            if ((this.UpdateStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStaffPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckStaffPasswordChangedCompletedEventHandler(object sender, CheckStaffPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckValidStaffNoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCampusCompletedEventHandler(object sender, GetCampusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCurrentAcademicYearCompletedEventHandler(object sender, GetCurrentAcademicYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentAcademicYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentAcademicYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetFinalExamMaxScoreCompletedEventHandler(object sender, GetFinalExamMaxScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinalExamMaxScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinalExamMaxScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLecturerProgrammesCompletedEventHandler(object sender, GetLecturerProgrammesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerProgrammesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerProgrammesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLecturerSemesterCompletedEventHandler(object sender, GetLecturerSemesterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerSemesterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerSemesterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLecturerStagesCompletedEventHandler(object sender, GetLecturerStagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerStagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerStagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLecturerStudentsCompletedEventHandler(object sender, GetLecturerStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLecturerUnitsCompletedEventHandler(object sender, GetLecturerUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLecturerUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLecturerUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProgrammeNameCompletedEventHandler(object sender, GetProgrammeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgrammeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgrammeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStaffDetailsCompletedEventHandler(object sender, GetStaffDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStaffGenderCompletedEventHandler(object sender, GetStaffGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStudentNameCompletedEventHandler(object sender, GetStudentNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSubmittedExamMarksCompletedEventHandler(object sender, GetSubmittedExamMarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubmittedExamMarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubmittedExamMarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUnitDescriptionCompletedEventHandler(object sender, GetUnitDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void IsLecturerCompletedEventHandler(object sender, IsLecturerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLecturerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLecturerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginForChangedPasswordCompletedEventHandler(object sender, LoginForChangedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForChangedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForChangedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LoginForUnchangedPasswordCompletedEventHandler(object sender, LoginForUnchangedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForUnchangedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForUnchangedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SubmitSummativeResultsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateStaffPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591